openapi: 3.0.3
info:
  title: becommerce-bff
  description: "BeCommerce BFF"
  version: 1.0.0
tags:
  - name: home
    description: Home payload by type
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: category
    description: Partners by category
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: partner
    description: Products by partner
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: session
    description: grants authorization and authentication
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /session:
    post:
      tags:
        - session
      summary: grants authorization and authentication
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationSchema'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionSchema'
        '400':
          description: Invalid type supplied
        '412':
          description: "Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorView'
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /user/register:
    post:
      tags:
        - register
        - user
      summary: Register new user
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserSchema'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid type supplied
        '412':
          description: "Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorView'
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /partner/register:
    post:
      tags:
        - partner
      summary: Register new partner
      operationId: registerPartner
      parameters:
        - name: "x-api-token"
          in: header
          description: Partner id
          required: true
          explode: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPartnerSchema'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid type supplied
        '412':
          description: "Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorView'
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /partner/{id}:
    get:
      tags:
        - partner
      summary: Partner page
      description: ''
      operationId: getPartnerData
      parameters:
        - name: "x-api-token"
          in: header
          description: Token
          required: true
          explode: true
          schema:
            type: string
        - name: "id"
          in: path
          description: Partner id
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PartnerPageSchema'
        '400':
          description: Invalid tag value
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /partner/list:
    get:
      tags:
        - list
        - partner
      summary: List all partners
      description: ''
      operationId: listPartners
      parameters:
        - name: "x-api-token"
          in: header
          description: Partner id
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PartnersListSchema'
        '400':
          description: Invalid tag value
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /partner:
    delete:
      tags:
        - partner
      summary: Remove partner
      description: ''
      operationId: removePartner
      parameters:
        - name: "x-api-token"
          in: header
          description: Partner id
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /product/register:
    post:
      tags:
        - product
      summary: Register product
      description: ''
      operationId: registerProduct
      parameters:
        - name: "x-api-token"
          in: header
          description: Partner id
          required: true
          explode: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSchema'
      responses:
        '201':
          description: successful operation
        '400':
          description: Invalid tag value
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /product/find/{filter}:
    get:
      tags:
        - product
        - find
        - search
      summary: List product by filter
      description: ''
      operationId: findProducts
      parameters:
        - name: x-api-token
          in: header
          description: JWT Token
          required: true
          explode: true
          schema:
            type: string
        - name: filter
          in: path
          description: filter
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSchema'
        '400':
          description: Invalid tag value
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /product/{id}:
    get:
      tags:
        - product
      summary: Find product by id
      description: ''
      operationId: findProduct
      parameters:
        - name: x-api-token
          in: header
          description: JWT Token
          required: true
          explode: true
          schema:
            type: string
        - name: id
          in: path
          description: filter
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductSchema'

  /category/register:
    post:
      tags:
        - category
        - register
      summary: Register new category
      description: ''
      operationId: registerCategory
      parameters:
        - name: "x-api-token"
          in: header
          description: Partner id
          required: true
          explode: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorySchema'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid type supplied
        '405':
          description: Validation exception
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /screen/home/{type}:
    get:
      tags:
        - home
      summary: Get partners categories
      description: ''
      operationId: getData
      parameters:
        - name: "type"
          in: path
          description: Home payload type
          required: true
          explode: true
          schema:
            type: string
            default: products
            enum: [ "products", "services" ]
        - name: "x-api-token"
          in: header
          description: Partner id
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeScreenSchema'
        '400':
          description: Invalid type supplied
        '405':
          description: Validation exception
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /sale/list:
    get:
      tags:
        - sale
      summary: Get user orders/sales
      description: ''
      operationId: getSales
      parameters:
        - name: "x-api-token"
          in: header
          description: User id
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesSchema'

  /sale/register:
    post:
      tags:
        - sale
      summary: Register order/sale
      description: ''
      operationId: registerSale
      parameters:
        - name: "x-api-token"
          in: header
          description: User id
          required: true
          explode: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSaleSchema'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid type supplied
        '405':
          description: Validation exception

  /sale/{number}:
    get:
      tags:
        - sale
      summary: Find sale by number
      description: ''
      operationId: findSale
      parameters:
        - name: "x-api-token"
          in: header
          description: User id
          required: true
          explode: true
          schema:
            type: string
        - name: "number"
          in: path
          description: Sale number
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleSchema'
        '400':
          description: Invalid type supplied
        '405':
          description: Validation exception

  /image/presignurl:
    get:
      tags:
        - image
      summary: Get pre sign url
      description: ''
      operationId: getPreSignUrl
      parameters:
        - name: "x-api-token"
          in: header
          description: User id
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreSignUrlSchema"
        '400':
          description: Invalid type supplied
        '405':
          description: Validation exception

components:
  schemas:
    AuthenticationSchema:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    SessionSchema:
      type: object
      properties:
        user:
          type: object
          $ref: '#/components/schemas/UserSchema'
        access_token:
          type: string
        expires_in:
          type: string

    PreSignUrlSchema:
      type: object
      properties:
        uploadUrl:
          type: string
        objectUrl:
          type: string

    UserSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        userType:
          type: string
        partnerSchema:
          type: object
          $ref: '#/components/schemas/PartnerSchema'

    RegisterUserSchema:
      type: object
      properties:
        name:
          type: string
        cnpj:
          type: string
        userType:
          type: string
        email:
          type: string
        password:
          type: string
        address:
          $ref: '#/components/schemas/AddressSchema'

    RegisterPartnerSchema:
      type: object
      properties:
        userId:
          type: string
        partnerSchema:
          type: object
          $ref: '#/components/schemas/PartnerSchema'
        addressSchema:
          type: object
          $ref: '#/components/schemas/AddressSchema'

    PartnerPageSchema:
      type: object
      properties:
        userSchema:
          type: object
          $ref: '#/components/schemas/UserSchema'
        partnerSchema:
          type: object
          $ref: '#/components/schemas/PartnerSchema'
        addressSchema:
          type: object
          $ref: '#/components/schemas/AddressSchema'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductSchema'

    PartnersListSchema:
      type: object
      properties:
        partners:
          type: array
          items:
            $ref: '#/components/schemas/PartnerSchema'

    Category:
      type: object
      properties:
        name:
          type: string
        deeplink:
          type: string
        icon:
          type: string

    New:
      type: object
      properties:
        partnerName:
          type: string
        partnerDescription:
          type: string
        backgroundImg:
          type: string

    Product:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: long
        quantity:
          type: integer
        image:
          type: string

    ProductSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: long
        quantity:
          type: int
        category:
          type: string
        icon:
          type: string
        images:
          type: array
          items:
            type: string

    AddressSchema:
      type: object
      properties:
        street:
          type: string
        streetType:
          type: string
        number:
          type: integer
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipCode:
          type: string
        neighborhood:
          type: string

    PartnerSchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cnpj:
          type: string
        description:
          type: string
        location:
          type: string
        avaliation:
          type: double
        icon:
          type: string
        backgroundImage:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schema/CategorySchema'
        address:
          type: object
          $ref: '#/components/schema/AddressSchema'

    CategorySchema:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    HomeScreenSchema:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schema/CategorySchema'
        news:
          type: array
          items:
            $ref: '#/components/schema/NewsSchema'
        partners:
          type: array
          items:
            $ref: '#/components/schema/PartnerSchema'

    NewsSchema:
      type: object
      properties:
        partnerId:
          type: string
        partnerName:
          type: string
        partnerDescription:
          type: string
        backgroundImg:
          type: string

    ErrorView:
      type: object
      properties:
        message:
          type: string
        detailMessage:
          type: string
        code:
          type: string
      example:
        message: "Campo XXXX inválido"
        detailMessage: "XXX com formato inválido."
        code: "BEBFF_1"

    SalesSchema:
      type: array
      items:
        $ref: '#/components/schemas/SaleComponentSchema'

    SaleComponentSchema:
      type: object
      properties:
        id:
          type: string
        number:
          type: integer
        userId:
          type: string
        userName:
          type: string
        partnerId:
          type: string
        partnerName:
          type: string
        value:
          type: double
        status:
          type: string
        lastUpdate:
          type: string
        created:
          type: string

    RegisterSaleSchema:
      type: object
      properties:
        partnerId:
          type: String
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductQuantitySchema'
        note:
          type: string

    ProductQuantitySchema:
      type: object
      properties:
        name:
          type: string
        productId:
          type: string
        quantity:
          type: integer

    SaleSchema:
      type: object
      properties:
        number:
          type: integer
        lastUpdate:
          type: string
        created:
          type: string
        partner:
          type: object
          $ref: "#/components/schemas/PartnerSchema"
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductQuantitySchema'
        address:
          type: object
          $ref: '#/components/schemas/AddressSchema'
        status:
          type: string
        payment:
          type: object
          $ref: '#/components/schemas/PaymentSchema'

    PaymentSchema:
      type: object
      properties:
        status:
          type: string
        method:
          type: string
        date:
          type: string

  securitySchemes:
    becommerce_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://gbrl.dev.br/becommerce/oauth/authorize
          scopes:
            write:becommerce: m
            read:becommerce: read your partners
    api_key:
      type: apiKey
      name: api_key
      in: header