openapi: 3.0.3
info:
  title: becommerce-bff
  description: "BeCommerce BFF"
  version: 1.0.0
tags:
  - name: home
    description: Home payload by type
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: category
    description: Partners by category
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: partner
    description: Products by partner
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: session
    description: grants authorization and authentication
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /session:
    post:
      tags:
        - session
      summary: grants authorization and authentication
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Invalid type supplied
        '412':
          description: "Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorView'
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /home/{type}:
    get:
      tags:
        - home
      summary: Get partners categories
      description: ''
      operationId: Get homepage data
      parameters:
        - name: "type"
          in: path
          description: Home payload type
          required: true
          explode: true
          schema:
            type: string
            default: products
            enum: [ "products", "services" ]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Home'
        '400':
          description: Invalid type supplied
        '405':
          description: Validation exception
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /category/{type}:
    get:
      tags:
        - category
      summary: Show partners by category
      description: ''
      operationId: getByCategory
      parameters:
        - name: "type"
          in: path
          description: Category type
          required: true
          explode: true
          schema:
            type: string
            default: food
            enum: [ "food", "clothing" ]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Invalid status value
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /customer/register:
    post:
      tags:
        - register
      summary: Register new customer
      operationId: registerCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCustomerRequest'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid type supplied
        '412':
          description: "Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorView'
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /partner/register:
    post:
      tags:
        - register
      summary: Register new partner
      operationId: registerPartner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPartnerRequest'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid type supplied
        '412':
          description: "Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorView'
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce

  /partner/{id}:
    get:
      tags:
        - partner
      summary: Products by partner
      description: ''
      operationId: getByPartner
      parameters:
        - name: "id"
          in: path
          description: Partner id
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PartnerPage'
        '400':
          description: Invalid tag value
      security:
        - becommerce_auth:
            - write:becommerce
            - read:becommerce
components:
  schemas:
    Home:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        news:
          type: array
          items:
            $ref: '#/components/schemas/New'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Partner'

    CategoryPage:
      type: object
      properties:
        news:
          type: array
          items:
            $ref: '#/components/schemas/New'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Partner'

    PartnerPage:
      type: object
      properties:
        partner:
          $ref: '#/components/schemas/Partner'
        productsLabel:
          type: array
          items:
            type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'

    Category:
      type: object
      properties:
        name:
          type: string
        deeplink:
          type: string
        icon:
          type: string

    New:
      type: object
      properties:
        partnerName:
          type: string
        partnerDescription:
          type: string
        backgroundImg:
          type: string

    Partner:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        avaliation:
          type: double
        location:
          type: string
        icon:
          type: string
        backgroundImage:
          type: string

    Product:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: double
        quantity:
          type: integer
        image:
          type: string

    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    RegisterCustomerRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string

    RegisterPartnerRequest:
      type: object
      properties:
        name:
          type: string
        cnpj:
          type: string
        description:
          type: string
        icon:
          type: string
        address:
          $ref: '#/components/schemas/AddressRequest'

    AddressRequest:
      type: object
      properties:
        street:
          type: string
        streetType:
          type: string
        number:
          type: integer
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipCode:
          type: string
        neighborhood:
          type: string

    SessionResponse:
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: string

    ErrorView:
      type: object
      properties:
        message:
          type: string
        detailMessage:
          type: string
        code:
          type: string
      example:
        message: "Campo XXXX inválido"
        detailMessage: "XXX com formato inválido."
        code: "BEBFF_1"
  securitySchemes:
    becommerce_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://gbrl.dev.br/becommerce/oauth/authorize
          scopes:
            write:becommerce: m
            read:becommerce: read your partners
    api_key:
      type: apiKey
      name: api_key
      in: header